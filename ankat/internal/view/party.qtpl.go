// This file is automatically generated by qtc from "party.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line party.qtpl:1
package view

//line party.qtpl:1
import "github.com/fpawel/ankat/internal/db/products"

//line party.qtpl:2
import "github.com/fpawel/ankat/internal/ankat"

//line party.qtpl:3
import "github.com/jmoiron/sqlx"

//line party.qtpl:4
import "fmt"

//line party.qtpl:6
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line party.qtpl:6
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line party.qtpl:6
func StreamParty(qw422016 *qt422016.Writer, db *sqlx.DB, partyID ankat.PartyID) {
	//line party.qtpl:6
	qw422016.N().S(`

`)
	//line party.qtpl:9
	p := products.GetParty(db, partyID)
	varValues := p.ProductVarValues()

	//line party.qtpl:11
	qw422016.N().S(`

<html> 
	<head> 
        <title> Партия</title>
        <style type="text/css"> 
            table, th, td { 
                border-collapse: collapse; 
                border:0px;
            }
            th, td { 
                font-size: 14px; 
                padding: 5px 8px;
            }
            .col2 {
                color: #000080; 
                font-weight: bold; 
                text-align:left;
            } 
            .col1 {
                text-align:right;
            }

            table.tab2, table.tab2 th, table.tab2 td {
                border: 1px solid black;
            }
        </style> 
    </head>
    <body>

    `)
	//line party.qtpl:41
	for _, sect := range varValues.Sects() {
		//line party.qtpl:41
		qw422016.N().S(`    
        <h3>`)
		//line party.qtpl:42
		qw422016.E().S(sect.Description())
		//line party.qtpl:42
		qw422016.N().S(`</h3>
        <table class="tab2"> 
            <thead>
                <tr>
                    <th colspan = "2">Точка</th> 
                    `)
		//line party.qtpl:47
		for _, product := range varValues.Products() {
			//line party.qtpl:47
			qw422016.N().S(`
                        <th>`)
			//line party.qtpl:48
			qw422016.E().V(product)
			//line party.qtpl:48
			qw422016.N().S(`</th>
                    `)
			//line party.qtpl:49
		}
		//line party.qtpl:49
		qw422016.N().S(` 
                </tr>
            </thead>           
            <tbody>
               
                `)
		//line party.qtpl:54
		for _, v := range varValues.Vars() {
			//line party.qtpl:54
			qw422016.N().S(`
                    `)
			//line party.qtpl:55
			for _, pt := range varValues.Points() {
				//line party.qtpl:55
				qw422016.N().S(`

                        `)
				//line party.qtpl:57
				if xs, ok := varValues.SectVarPointValues(sect, v, pt); ok {
					//line party.qtpl:57
					qw422016.N().S(`
			                <tr>
                                <th style="text-align:left;" >`)
					//line party.qtpl:59
					qw422016.E().S(sect.PointDescription(pt))
					//line party.qtpl:59
					qw422016.N().S(`</th> 
                                <th style="text-align:right;" >`)
					//line party.qtpl:60
					qw422016.E().S(fmt.Sprintf("%s [%d]", products.GetVar(db, v).Name, int(pt)))
					//line party.qtpl:60
					qw422016.N().S(`</th>
                                `)
					//line party.qtpl:61
					for _, product := range varValues.Products() {
						//line party.qtpl:61
						qw422016.N().S(`
                                    <td style="text-align:left;">
                                        `)
						//line party.qtpl:63
						if value, ok := xs[product]; ok {
							//line party.qtpl:63
							qw422016.N().S(`
                                            `)
							//line party.qtpl:64
							qw422016.N().F(value)
							//line party.qtpl:64
							qw422016.N().S(`
                                        `)
							//line party.qtpl:65
						}
						//line party.qtpl:65
						qw422016.N().S(`
                                    </td>
                                `)
						//line party.qtpl:67
					}
					//line party.qtpl:67
					qw422016.N().S(` 
                            </tr>
			            `)
					//line party.qtpl:69
				}
				//line party.qtpl:69
				qw422016.N().S(`
                    `)
				//line party.qtpl:70
			}
			//line party.qtpl:70
			qw422016.N().S(`
                `)
			//line party.qtpl:71
		}
		//line party.qtpl:71
		qw422016.N().S(`
            </tbody>
        </table>        
    `)
		//line party.qtpl:74
	}
	//line party.qtpl:74
	qw422016.N().S(`   

    `)
	//line party.qtpl:76
	if len(p.Coefficients()) > 0 {
		//line party.qtpl:76
		qw422016.N().S(`
        `)
		//line party.qtpl:77
		StreamCoefficients(qw422016, p)
		//line party.qtpl:77
		qw422016.N().S(`

    `)
		//line party.qtpl:79
	}
	//line party.qtpl:79
	qw422016.N().S(` 

    

    </body>
</html>
`)
//line party.qtpl:85
}

//line party.qtpl:85
func WriteParty(qq422016 qtio422016.Writer, db *sqlx.DB, partyID ankat.PartyID) {
	//line party.qtpl:85
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line party.qtpl:85
	StreamParty(qw422016, db, partyID)
	//line party.qtpl:85
	qt422016.ReleaseWriter(qw422016)
//line party.qtpl:85
}

//line party.qtpl:85
func Party(db *sqlx.DB, partyID ankat.PartyID) string {
	//line party.qtpl:85
	qb422016 := qt422016.AcquireByteBuffer()
	//line party.qtpl:85
	WriteParty(qb422016, db, partyID)
	//line party.qtpl:85
	qs422016 := string(qb422016.B)
	//line party.qtpl:85
	qt422016.ReleaseByteBuffer(qb422016)
	//line party.qtpl:85
	return qs422016
//line party.qtpl:85
}

//line party.qtpl:87
func StreamCoefficients(qw422016 *qt422016.Writer, p products.Party) {
	//line party.qtpl:87
	qw422016.N().S(`

    `)
	//line party.qtpl:90
	values := p.Coefficients()

	//line party.qtpl:91
	qw422016.N().S(`

    <h3>Коэффициенты</h3>

    <table class="tab2">
        <thead>
            <th>№</th>
            `)
	//line party.qtpl:98
	for _, product := range values.Products() {
		//line party.qtpl:98
		qw422016.N().S(`
                <th>`)
		//line party.qtpl:99
		qw422016.N().D(int(product))
		//line party.qtpl:99
		qw422016.N().S(`</th>
            `)
		//line party.qtpl:100
	}
	//line party.qtpl:100
	qw422016.N().S(`
        </thead>
        <tbody>
            `)
	//line party.qtpl:103
	for _, coefficient := range values.Coefficients() {
		//line party.qtpl:103
		qw422016.N().S(`       
                <tr>
                    <th>`)
		//line party.qtpl:105
		qw422016.E().S(fmt.Sprintf("%02d", coefficient))
		//line party.qtpl:105
		qw422016.N().S(`</th>                        
                    `)
		//line party.qtpl:106
		for _, product := range values.Products() {
			//line party.qtpl:106
			qw422016.N().S(`
                        <td>`)
			//line party.qtpl:107
			qw422016.E().V(formatFloat6(values[coefficient][product]))
			//line party.qtpl:107
			qw422016.N().S(`</td>
                    `)
			//line party.qtpl:108
		}
		//line party.qtpl:108
		qw422016.N().S(` 
                </tr>
	        `)
		//line party.qtpl:110
	}
	//line party.qtpl:110
	qw422016.N().S(`
        </tbody>
        
    </table>

`)
//line party.qtpl:115
}

//line party.qtpl:115
func WriteCoefficients(qq422016 qtio422016.Writer, p products.Party) {
	//line party.qtpl:115
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line party.qtpl:115
	StreamCoefficients(qw422016, p)
	//line party.qtpl:115
	qt422016.ReleaseWriter(qw422016)
//line party.qtpl:115
}

//line party.qtpl:115
func Coefficients(p products.Party) string {
	//line party.qtpl:115
	qb422016 := qt422016.AcquireByteBuffer()
	//line party.qtpl:115
	WriteCoefficients(qb422016, p)
	//line party.qtpl:115
	qs422016 := string(qb422016.B)
	//line party.qtpl:115
	qt422016.ReleaseByteBuffer(qb422016)
	//line party.qtpl:115
	return qs422016
//line party.qtpl:115
}
